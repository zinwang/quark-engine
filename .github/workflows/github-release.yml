name: Monthly Codex CI

on:
  push:
    branches: [ master ]
  schedule:
    # Runs at 00:00 UTC on the first day of each month
    - cron: '45 6 1 * *'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' 
          
      - name: Install Codex CLI
        run: |
          sudo npm install -g @openai/codex@0.1.2505172129

      - name: Install dependencies
        run: |
          sudo apt install git

      - name: Generate PR summary issue
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          CODEX_QUIET_MODE: 1
          GH_TOKEN: ${{ github.token }}
        run: |
          
          echo "Update the version number for releasing the latest version of Quark." > ISSUE_BODY.md
          echo "In this version, the following changes will be included." >> ISSUE_BODY.md
          echo " " >> ISSUE_BODY.md
          git log --since="1 month ago" --oneline | grep "(#" | awk -F"#" '{print $2}' | awk -F")" '{printf "- #%s\n", $1}' >> ISSUE_BODY.md
          
          
          dateInfo=$(date +%y.%-m)
          versionNum="v$dateInfo.1"
          gh issue create \
            --title "Prepare to release version $versionNum" \
            --body-file ISSUE_BODY.md

      - name: Update CHANGELOG
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          CODEX_QUIET_MODE: 1
        run: |
          codex -a auto-edit -q \
            """ Follow the instructions below, to update debian/changelog for $versionNum. 
                In debian/changelog, you are going to append a new section, and describe what the new
                merged PR last month do. Here are the instruction:
             
                1. First, identify the Pull Requests of last month by reading ISSUE_BODY.md.
                2. Next, for each Pull Request, choose a proper tag for it. 
                   A tag could be from [Rule Enhancement/Document Enhancement/New Feature/Bug Fix/Dependency Update/etc.]
                   You can reference the previous changelog to see if the tag matches the Pull Requests.
                   Or if the Pull Requests is something that we have never done before, try to give it a proper name.
                3. Then, combine those descriptions that are similar. For example, 
                   Optimize the Quark Script documents for CWE-328, CWE-338, and CWE-489. (#754, #756, and #757)
                4. Use the following template and make sure it follows the debian changelog format: 
            
                    quark-engine (YY.M.1-0kali1) kali-dev; urgency=medium
      
                    * TAG
      
                    - DESCRIPTION
      
                  --  Zin Wong <chriswangxxxxx@gmail.com> Date
          
                  for example, 
          
                  quark-engine (25.1.1-0kali1) kali-dev; urgency=medium

                    * Document Enhancement

                    - Optimize the Quark Script documents for CWE-94, CWE-798, and CWE-921. (#724, #722, and #723) 

                  --  Zin Wong <chriswangxxxxx@gmail.com>  Tue, 01 Jan 2025 20:00:00 +0800
          
            """

      - name: Bump version info
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          CODEX_QUIET_MODE: 1
        run: |
            codex -a auto-edit -q \
            "Update version information in the following files for next release $versionNum:
            1. debian/control: Standards-Version
            2. docs/source/conf.py: release
            3. quark/__init__.py: __version__
            Where YY.MM.X stands for:
             - YY: last two digits of the year
             - MM: month number
             - X: release count within that month (normally 1)
            For example, 25.2.1 means the 1st release in February 2025."

      - name: Commit version info bumps
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add debian/control
          git add docs/source/conf.py
          git add quark/__init__.py
          git commit -m "Update version information for $versionNum" || echo "No changes to commit"          

      - name: Create pull request for version bump
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version for next release"
          title: "Update version information to $versionNum"
          body: |
            This PR updates the version information and CHANGELOG for the upcoming release $versionNum.
