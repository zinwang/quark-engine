name: CI Failure Advisor

on:
  workflow_run:
    workflows: [test]
    types: [completed]

jobs:
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22' 
          
      - name: Install Codex CLI
        run: |
          sudo npm install -g @openai/codex@0.1.2505172129

      - name: Install dependencies
        run: |
          sudo apt install git

      - name: Fetch info from the failed run
        id: fetch_info
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          failedRunId=${{ github.event.workflow_run.id }}
          echo "failedRunId=$failedRunId" >> $GITHUB_OUTPUT
          echo "Failed Run ID: $failedRunId"
          
          failedRunConfigFile=$(gh api repos/${{ github.repository }}/actions/runs/$failedRunId --jq '.path')
          echo "failedRunConfigFile=$failedRunConfigFile" >> $GITHUB_OUTPUT
          echo "Failed Run Config File: $failedRunConfigFile"
          
          failedCIName=$(gh run view $failedRunId --json name --jq .name)
          echo "failedCIName=$failedCIName" >> $GITHUB_OUTPUT
          echo "Failed CI Name: failedCIName"
          
          errorLog=$(gh run view $failedRunId --log)
          echo $errorLog > errorLog.txt
          
      - name: Analysis the error log
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_KEY }}
          CODEX_QUIET_MODE: 1
        run: |      
          failedRunConfigFile=${{ steps.fetch_info.outputs.failedRunConfigFile }}
          codex -a auto-edit -q \
            """
              You are an experienced DevOps engineer, well-versed in GitHub Actions CI, and Python development. 
              Iâ€™ve encountered a GitHub Actions failure in a Python project and need your advice on how to resolve it.

              Here are the data you can investigate:
                1. ``./`` directory: the source code of the Python project
                2. ``$failedRunConfigFile`` file: the config file of the CI
                3. ``errorLog.txt`` file: the error log
              
              Please analyze the data above and record the two pieces of information in ``analysis.md``:
                1. The root cause of the failure
                2. The most possible solution to the problems     
              (Please attach credible references such as StackOverflow solutions or documentation)
            """
            cat analysis.md